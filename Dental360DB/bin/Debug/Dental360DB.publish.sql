/*
Deployment script for Dental360DB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Dental360DB"
:setvar DefaultFilePrefix "Dental360DB"
:setvar DefaultDataPath "C:\Users\sam\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"
:setvar DefaultLogPath "C:\Users\sam\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Rename refactoring operation with key 3004dc5f-a188-43fa-8a19-222db7cbdfe4, daf203eb-30ae-4649-b095-ffdf0c618d92 is skipped, element [dbo].[Patient].[Id] (SqlSimpleColumn) will not be renamed to PatientPhone';


GO
PRINT N'Rename refactoring operation with key 37e93f06-dc1f-41d0-a7c3-ea005b85f903 is skipped, element [dbo].[Appointment].[Booking_ID] (SqlSimpleColumn) will not be renamed to BookingId';


GO
PRINT N'Rename refactoring operation with key a324b504-b914-48d0-ab97-01df73491853 is skipped, element [dbo].[Appointment].[Client_PhoneNumber] (SqlSimpleColumn) will not be renamed to PatientPhone';


GO
PRINT N'Rename refactoring operation with key a870a927-f79e-4555-a6cb-a856f8b43f6b is skipped, element [dbo].[Appointment].[Service_ID] (SqlSimpleColumn) will not be renamed to ServiceId';


GO
PRINT N'Rename refactoring operation with key 88e3f84d-c459-4f8d-8c04-8473a504e146 is skipped, element [dbo].[Appointment].[Staff_ID] (SqlSimpleColumn) will not be renamed to StaffId';


GO
PRINT N'Rename refactoring operation with key b024db0a-d4b6-48c2-908d-037c650982c4, 24cfe242-393e-4ba2-b473-c412e7a12af3 is skipped, element [dbo].[Appointment].[Service_Date] (SqlSimpleColumn) will not be renamed to AppointmentDate';


GO
PRINT N'Rename refactoring operation with key 2529a5f4-d302-4f48-b72f-788e88704040, 89c8868c-711e-4a9c-a921-6a02f9eddf0e is skipped, element [dbo].[Appointment].[Service_StartTime] (SqlSimpleColumn) will not be renamed to AppointmentStartTime';


GO
PRINT N'Rename refactoring operation with key a27d2e19-7033-46af-91a5-d51a01ff814e, ccf9cf82-e9d8-4de1-bfe4-e10b7b16b5be is skipped, element [dbo].[Appointment].[Service_EndTime] (SqlSimpleColumn) will not be renamed to AppointmentEndTime';


GO
PRINT N'Creating [dbo].[Appointment]...';


GO
CREATE TABLE [dbo].[Appointment] (
    [BookingId]            INT           IDENTITY (1, 1) NOT NULL,
    [PatientPhone]         NVARCHAR (50) NOT NULL,
    [ServiceId]            INT           NOT NULL,
    [StaffId]              INT           NOT NULL,
    [AppointmentDate]      DATE          NOT NULL,
    [AppointmentStartTime] DATETIME      NOT NULL,
    [AppointmentEndTime]   DATETIME      NOT NULL,
    PRIMARY KEY CLUSTERED ([BookingId] ASC)
);


GO
PRINT N'Creating [dbo].[Patient]...';


GO
CREATE TABLE [dbo].[Patient] (
    [PatientPhone]     NVARCHAR (50) NOT NULL,
    [PatientFirstName] NVARCHAR (50) NOT NULL,
    [PatientLastName]  NVARCHAR (50) NOT NULL,
    [PatientEmail]     NVARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([PatientPhone] ASC)
);


GO
PRINT N'Creating [dbo].[Service]...';


GO
CREATE TABLE [dbo].[Service] (
    [ServiceId]        INT             IDENTITY (1, 1) NOT NULL,
    [ServiceName]      VARCHAR (50)    NOT NULL,
    [ServicePrice]     DECIMAL (18, 2) NOT NULL,
    [ServiceTimeTaken] INT             NOT NULL,
    PRIMARY KEY CLUSTERED ([ServiceId] ASC)
);


GO
PRINT N'Creating [dbo].[Staff]...';


GO
CREATE TABLE [dbo].[Staff] (
    [StaffId]          INT          IDENTITY (1, 1) NOT NULL,
    [StaffPhoneNumber] VARCHAR (50) NOT NULL,
    [StaffFirstName]   VARCHAR (50) NOT NULL,
    [StaffLastName]    VARCHAR (50) NOT NULL,
    [StafEmail]        VARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([StaffId] ASC),
    CONSTRAINT [AK_FirstNameID] UNIQUE NONCLUSTERED ([StaffFirstName] ASC)
);


GO
PRINT N'Creating [dbo].[FK_BookingDetails_ToClient]...';


GO
ALTER TABLE [dbo].[Appointment] WITH NOCHECK
    ADD CONSTRAINT [FK_BookingDetails_ToClient] FOREIGN KEY ([PatientPhone]) REFERENCES [dbo].[Patient] ([PatientPhone]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_BookingDetails_ToService]...';


GO
ALTER TABLE [dbo].[Appointment] WITH NOCHECK
    ADD CONSTRAINT [FK_BookingDetails_ToService] FOREIGN KEY ([ServiceId]) REFERENCES [dbo].[Service] ([ServiceId]) ON DELETE CASCADE;


GO
PRINT N'Creating [dbo].[FK_BookingDetails_ToStaff]...';


GO
ALTER TABLE [dbo].[Appointment] WITH NOCHECK
    ADD CONSTRAINT [FK_BookingDetails_ToStaff] FOREIGN KEY ([StaffId]) REFERENCES [dbo].[Staff] ([StaffId]) ON DELETE CASCADE;


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3004dc5f-a188-43fa-8a19-222db7cbdfe4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3004dc5f-a188-43fa-8a19-222db7cbdfe4')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'daf203eb-30ae-4649-b095-ffdf0c618d92')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('daf203eb-30ae-4649-b095-ffdf0c618d92')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '37e93f06-dc1f-41d0-a7c3-ea005b85f903')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('37e93f06-dc1f-41d0-a7c3-ea005b85f903')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a324b504-b914-48d0-ab97-01df73491853')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a324b504-b914-48d0-ab97-01df73491853')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a870a927-f79e-4555-a6cb-a856f8b43f6b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a870a927-f79e-4555-a6cb-a856f8b43f6b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '88e3f84d-c459-4f8d-8c04-8473a504e146')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('88e3f84d-c459-4f8d-8c04-8473a504e146')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b024db0a-d4b6-48c2-908d-037c650982c4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b024db0a-d4b6-48c2-908d-037c650982c4')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2529a5f4-d302-4f48-b72f-788e88704040')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2529a5f4-d302-4f48-b72f-788e88704040')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a27d2e19-7033-46af-91a5-d51a01ff814e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a27d2e19-7033-46af-91a5-d51a01ff814e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '24cfe242-393e-4ba2-b473-c412e7a12af3')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('24cfe242-393e-4ba2-b473-c412e7a12af3')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '89c8868c-711e-4a9c-a921-6a02f9eddf0e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('89c8868c-711e-4a9c-a921-6a02f9eddf0e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ccf9cf82-e9d8-4de1-bfe4-e10b7b16b5be')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ccf9cf82-e9d8-4de1-bfe4-e10b7b16b5be')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Appointment] WITH CHECK CHECK CONSTRAINT [FK_BookingDetails_ToClient];

ALTER TABLE [dbo].[Appointment] WITH CHECK CHECK CONSTRAINT [FK_BookingDetails_ToService];

ALTER TABLE [dbo].[Appointment] WITH CHECK CHECK CONSTRAINT [FK_BookingDetails_ToStaff];


GO
PRINT N'Update complete.';


GO
